// Generated by CoffeeScript 1.7.1
(function() {
  var async, before, util, _;

  async = require('async');

  _ = require('lodash');

  util = require('../util');

  before = function(list) {
    list = util._toArray(list);
    return function(req, res, callback) {
      var parallel, _ctrl;
      _ctrl = req._ctrl;
      parallel = toString.call(callback) === '[object Function]' ? false : true;
      if (parallel) {
        return list.forEach(function(method) {
          var fn;
          fn = _ctrl[method];
          if (toString.call(fn) !== '[object Function]') {
            return false;
          }
          return fn.call(_ctrl, req, res);
        });
      } else {
        return async.eachSeries(list, function(method, next) {
          var fn;
          fn = _ctrl[method];
          if (toString.call(fn) !== '[object Function]') {
            return next();
          }
          if (fn.length === 3) {
            return fn.call(_ctrl, req, res, next);
          } else {
            return fn.call(_ctrl, req, next);
          }
        }, callback);
      }
    };
  };

  before.before = true;

  module.exports = before;

}).call(this);
