// Generated by CoffeeScript 1.7.1
(function() {
  var assembler, async, util;

  async = require('async');

  util = require('../util');

  assembler = function(list) {
    list = util._toArray(list);
    return function(req, res, result, callback) {
      var parallel, _ctrl;
      _ctrl = req._ctrl;
      parallel = toString.call(callback) === '[object Function]' ? false : true;
      if (parallel) {
        return list.forEach(function(method) {
          var fn;
          fn = _ctrl[method];
          if (toString.call(fn) !== '[object Function]') {
            return false;
          }
          return fn.call(_ctrl, req, res, result);
        });
      } else {
        return async.reduce(list, result, function(result, method, next) {
          var fn;
          fn = _ctrl[method];
          if (toString.call(fn) !== '[object Function]') {
            return next(null, result);
          }
          if (fn.length === 4) {
            return fn.call(_ctrl, req, res, result, function(err, _result) {
              return next(err, _result || result);
            });
          } else {
            return fn.call(_ctrl, req, result, function(err, _result) {
              return next(err, _result || result);
            });
          }
        }, callback);
      }
    };
  };

  assembler.after = true;

  module.exports = assembler;

}).call(this);
