// Generated by CoffeeScript 1.7.1
(function() {
  var assembler, async, toJSON;

  async = require('async');

  toJSON = function(obj) {
    if (obj.toJSON) {
      return obj.toJSON();
    } else {
      return obj;
    }
  };

  assembler = function(req, res, list, result, callback) {
    var _assembler, _ctrl;
    if (result == null) {
      result = {};
    }
    if (callback == null) {
      callback = function() {};
    }
    if (toString.call(list) === '[object String]') {
      list = list.split(new RegExp(' +'));
    }
    if (toString.call(list) !== '[object Array]') {
      return callback(null, result);
    }
    _ctrl = req._ctrl;
    if (toString.call(result) === '[object Array]') {
      result = result.map(toJSON);
    } else {
      result = toJSON(result);
    }
    _assembler = function(result, method, next) {
      var fn;
      fn = _ctrl[method];
      if (typeof fn !== 'function') {
        return next();
      }
      if (fn.length === 4) {
        return fn.call(_ctrl, req, res, result, function(err, _result) {
          return next(err, _result || result);
        });
      } else {
        return fn.call(_ctrl, req, result, function(err, _result) {
          return next(err, _result || result);
        });
      }
    };
    return async.reduce(list, result, function(result, method, next) {
      if (toString.call(result) === '[object Array]') {
        return async.map(result, function(_result, next) {
          return _assembler(_result, method, next);
        }, next);
      } else {
        return _assembler(result, method, next);
      }
    }, callback);
  };

  assembler.after = true;

  assembler.key = 'assemblers';

  assembler.parallel = false;

  module.exports = assembler;

}).call(this);
