// Generated by CoffeeScript 1.7.1
(function() {
  var async, backbone;

  async = require('async');

  backbone = function(req, res, callback) {
    var action, middlewares, _afterActions, _beforeActions, _ctrl, _ref;
    _ctrl = req._ctrl, action = req.action, middlewares = req.middlewares;
    _ref = _ctrl.constructor, _beforeActions = _ref._beforeActions, _afterActions = _ref._afterActions;
    middlewares || (middlewares = []);
    return async.waterfall([
      function(next) {
        return async.eachSeries(middlewares, function(fn, next) {
          return fn(req, res, next);
        }, next);
      }, function(next) {
        return async.eachSeries(_beforeActions || [], function(fn, next) {
          return fn(req, res, next);
        }, next);
      }, function(next) {
        if (_ctrl[action].length === 3) {
          return _ctrl[action](req, res, next);
        } else {
          return _ctrl[action](req, next);
        }
      }, function(result, next) {
        return async.reduce(_afterActions || [], result, function(result, fn, next) {
          return fn(req, res, result, next);
        }, next);
      }
    ], function(err, result) {
      res.err = err;
      res.result = result;
      return callback(req, res);
    });
  };

  module.exports = backbone;

}).call(this);
