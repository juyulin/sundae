// Generated by CoffeeScript 1.7.1
(function() {
  var Response;

  Response = (function() {
    function Response(res) {
      this.res = res != null ? res : {};
      this._params = {};
      this._replied = false;
    }

    Response.prototype.get = function(key) {
      if (key != null) {
        return this._params[key];
      } else {
        return this._params;
      }
    };

    Response.prototype.set = function(key, val) {
      this._params[key] = val;
      return this;
    };

    Response.prototype.parse = function(callback) {
      if (callback == null) {
        callback = function() {};
      }
      if (this.get('err') != null) {
        return this._error(callback);
      } else {
        return this._success(callback);
      }
    };

    Response.prototype._error = function(callback) {
      if (callback == null) {
        callback = function() {};
      }
      return callback(500, this.get('err'));
    };

    Response.prototype._success = function(callback) {
      if (callback == null) {
        callback = function() {};
      }
      return callback(200, this.get('result'));
    };

    Response.prototype.json = function() {
      var res;
      if (!this._replied) {
        res = this.get('res');
        return this.parse((function(_this) {
          return function(status, data) {
            res.status(status).json(data);
            return _this._replied = true;
          };
        })(this));
      }
    };

    Response.prototype.redirect = function() {
      var res;
      if (!this._replied) {
        res = this.get('res');
        res.redirect.apply(res, arguments);
        return this._replied = true;
      }
    };

    Response.prototype.cookie = function() {
      var res;
      res = this.get('res');
      return res.cookie.apply(res, arguments);
    };

    return Response;

  })();

  module.exports = Response;

}).call(this);
