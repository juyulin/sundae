// Generated by CoffeeScript 1.6.3
(function() {
  var Event, bucket, error, event, logger;

  logger = require('graceful-logger');

  error = require('./error');

  bucket = require('./bucket');

  error = error(function() {
    this.codes = {
      invalidSocketFunction: 500920,
      invalidSocketController: 500921
    };
    return this.msgs = {
      invalidSocketFunction: function(data) {
        return "Invalid Socket Function: " + (data != null ? data.func : void 0);
      },
      invalidSocketController: function(data) {
        return "Invalid Socket Controller: " + (data != null ? data.ctrl : void 0);
      }
    };
  });

  Event = (function() {
    var _baseDir;

    _baseDir = process.cwd();

    function Event(sundae) {
      this.sundae = sundae;
      this.io = this.sundae.io;
      this.appRoot = "" + (sundae.get('root') || _baseDir) + "/app";
      this.event = 'sundae:message';
    }

    Event.prototype._applyCtrl = function(data) {
      var $bucket, $ctrl, ctrl, e, func;
      ctrl = data.ctrl, func = data.func;
      func = func || 'index';
      try {
        $ctrl = require("" + this.appRoot + "/controllers/" + ctrl);
        if (typeof ($ctrl != null ? $ctrl[func] : void 0) !== 'function') {
          return logger.warn(error.parse('invalidSocketFunction', data).stringify());
        }
      } catch (_error) {
        e = _error;
        return logger.warn(error.parse('invalidSocketController', data).stringify());
      }
      $bucket = bucket('event');
      return $ctrl[func].call($ctrl, $bucket, function(err, data) {
        return $bucket.set('data', data);
      });
    };

    Event.prototype.register = function(event, callback) {
      if (callback == null) {
        callback = function() {};
      }
    };

    Event.prototype.connect = function() {
      var _this = this;
      return this.io.sockets.on('connection', function(socket) {
        return socket.on(_this.event, function(data) {
          return _this._applyCtrl(data);
        });
      });
    };

    return Event;

  })();

  event = function(sundae) {
    var _event;
    _event = function(events) {
      var $event;
      $event = new Event(sundae);
      if (typeof events === 'function') {
        return events.call($event);
      }
    };
    return _event;
  };

  module.exports = event;

}).call(this);
