// Generated by CoffeeScript 1.6.3
(function() {
  var Bundle, bundle,
    __slice = [].slice;

  Bundle = (function() {
    Bundle.prototype.schema = {
      cookie: Object,
      lang: String,
      result: Object
    };

    function Bundle(type, weeds) {
      var parseMethod;
      this.attrs = {};
      parseMethod = "parse" + (type[0].toUpperCase()) + type.slice(1);
      if (typeof this[parseMethod] === 'function') {
        this[parseMethod](weeds);
      }
    }

    Bundle.prototype.parseRest = function(weeds) {
      var _ref;
      this.req = weeds[0], this.res = weeds[1];
      return this.attrs = {
        cookie: (_ref = weeds.req) != null ? _ref.cookies : void 0
      };
    };

    Bundle.prototype.parseSocket = function(weeds) {};

    Bundle.prototype.set = function(key, val) {
      this.attrs[key] = val;
      return this;
    };

    Bundle.prototype.get = function(key) {
      return this.attrs[key];
    };

    Bundle.prototype.toJSON = function() {
      return this.attrs;
    };

    Bundle.__defineGetter__('args', function() {
      return this.args;
    });

    Bundle.__defineGetter__('result', function() {
      return this.attr['result'];
    });

    return Bundle;

  })();

  bundle = function() {
    var type, weeds;
    type = arguments[0], weeds = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    if (type == null) {
      type = 'rest';
    }
    return new Bundle(type, weeds);
  };

  module.exports = bundle;

}).call(this);
