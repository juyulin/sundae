// Generated by CoffeeScript 1.6.3
(function() {
  var Config, ccs, config, express, path, stylus;

  path = require('path');

  express = require('express');

  ccs = require('connect-coffee-script');

  stylus = require('stylus');

  Config = (function() {
    var _baseDir;

    _baseDir = process.cwd();

    function Config(sundae) {
      this.sundae = sundae;
    }

    Config.prototype["default"] = function() {
      var app, io;
      _baseDir = this.get('root') || _baseDir;
      io = this.io, app = this.app;
      app.configure(function() {
        app.use(express.favicon(path.join(__dirname, '../../favicon.ico')));
        app.set('views', "" + _baseDir + "/app/views");
        app.set('view engine', 'jade');
        app.use(express.cookieParser());
        return app.use(app.router);
      });
      app.configure('development', function() {
        app.use(stylus.middleware({
          src: "" + _baseDir + "/app/assets",
          dest: path.join(_baseDir, "public"),
          compress: true
        }));
        app.use(ccs({
          sourceMap: true,
          src: "" + _baseDir + "/app/assets",
          dest: path.join(_baseDir, "public")
        }));
        app.use(express["static"](path.join(_baseDir, 'public')));
        app.use(express["static"](path.join(_baseDir, 'vendor')));
        return app.use(express["static"](path.join(_baseDir, '/app/assets')));
      });
      return io.configure('development', function() {
        io.enable('browser client minification');
        io.enable('browser client etag');
        io.enable('browser client gzip');
        return io.set('transports', ['websocket', 'flashsocket']);
      });
    };

    return Config;

  })();

  config = function(sundae) {
    var _config;
    _config = function(template) {
      var $config;
      $config = new Config(sundae);
      if (typeof template === 'string' && ($config[template] != null)) {
        return $config[template];
      } else if (typeof template === 'function') {
        return template;
      } else {
        return $config['default'];
      }
    };
    return _config;
  };

  module.exports = config;

}).call(this);
