// Generated by CoffeeScript 1.7.1
(function() {
  var Sundae, configs, express, path, sundae;

  path = require('path');

  express = require('express');

  configs = require('./configs');

  Sundae = (function() {
    function Sundae() {
      this._configs = {};
      this._params = {};
    }

    Sundae.prototype.config = function(key, fn) {
      this._configs[key] = fn;
      return this;
    };

    Sundae.prototype.scaffold = function(mainPath) {
      mainPath = path.resolve(mainPath);
      this.set('mainPath', mainPath);
      this.config('routes', require(path.join(mainPath, 'config/routes')));
      this.config('express', require(path.join(mainPath, 'config/express')));
      return this;
    };

    Sundae.prototype.set = function(key, val) {
      this._params[key] = val;
      return this;
    };

    Sundae.prototype.get = function(key) {
      return this._params[key];
    };

    Sundae.prototype.run = function(callback) {
      var app, fn, key, _ref;
      if (callback == null) {
        callback = function() {};
      }
      app = express();
      _ref = this._configs;
      for (key in _ref) {
        fn = _ref[key];
        if (typeof configs[key] === "function") {
          configs[key](app, fn);
        }
      }
      return app.listen(this._params['port'] || app.get('port') || 3000, callback);
    };

    return Sundae;

  })();

  sundae = new Sundae;

  sundae.Request = require('./components/request');

  sundae.Response = require('./components/response');

  module.exports = sundae;

}).call(this);
