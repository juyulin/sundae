// Generated by CoffeeScript 1.7.1
(function() {
  var Sundae, backbone, express, middlewares, path, request, response, router, sundae;

  path = require('path');

  express = require('express');

  middlewares = require('./middlewares');

  request = require('./request');

  response = require('./response');

  router = require('./router');

  backbone = require('./backbone');

  Sundae = (function() {
    function Sundae() {
      this._configs = [];
      this._params = {};
      this._middlewares = [];
      this.set('mainPath', path.join(process.cwd(), 'app'));
    }

    Sundae.prototype.config = function(key, fn) {
      this._configs.push([key, fn]);
      return this;
    };

    Sundae.prototype.scaffold = function(mainPath) {
      mainPath = mainPath ? path.resolve(mainPath) : this.get('mainPath');
      this.set('mainPath', mainPath);
      this.config('request', require(path.join(mainPath, 'config/request')));
      this.config('response', require(path.join(mainPath, 'config/response')));
      this.config('routes', require(path.join(mainPath, 'config/routes')));
      this.config('express', require(path.join(mainPath, 'config/express')));
      this.config('backbone', function(backbone) {
        return backbone.middlewares = [middlewares.ensure, middlewares.filter, middlewares.select];
      });
      return this;
    };

    Sundae.prototype.set = function(key, val) {
      this._params[key] = val;
      return this;
    };

    Sundae.prototype.get = function(key) {
      return this._params[key];
    };

    Sundae.prototype.run = function(callback) {
      var app, fn, key, _config, _i, _len, _ref, _ref1;
      if (callback == null) {
        callback = function() {};
      }
      app = express();
      _ref = this._configs;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        _config = _ref[_i];
        key = _config[0], fn = _config[1];
        if ((_ref1 = this[key]) != null) {
          if (typeof _ref1.config === "function") {
            _ref1.config(app, fn);
          }
        }
      }
      return app.listen(this._params['port'] || app.get('port') || 7000, callback);
    };

    return Sundae;

  })();

  sundae = new Sundae;

  sundae.middlewares = middlewares;

  sundae.request = request;

  sundae.response = response;

  sundae.router = router;

  sundae.backbone = backbone;

  module.exports = sundae;

}).call(this);
