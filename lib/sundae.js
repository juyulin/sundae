// Generated by CoffeeScript 1.6.3
(function() {
  var Sundae, express, http, logger, socketIo, sundae, _,
    __slice = [].slice;

  _ = require('lodash');

  http = require('http');

  express = require('express');

  socketIo = require('socket.io');

  logger = require('graceful-logger');

  Sundae = (function() {
    function Sundae() {
      this.attrs = {};
    }

    Sundae.prototype.init = function(options) {
      var app, io, server;
      if (options == null) {
        options = {};
      }
      this.options = _.extend({
        port: 3011
      }, options);
      app = this.app = express();
      server = this.server = http.createServer(app);
      io = this.io = socketIo.listen(server);
      return this;
    };

    Sundae.prototype.set = function(key, val) {
      this.attrs[key] = val;
      return this;
    };

    Sundae.prototype.get = function(key) {
      return this.attrs[key];
    };

    Sundae.prototype.run = function(callback) {
      var _this = this;
      if (callback == null) {
        callback = function() {};
      }
      this.server.listen(this.options.port, function() {
        logger.info("Server is listening on " + _this.options.port);
        return callback();
      });
      return this;
    };

    Sundae.prototype.use = function() {
      var args, widget;
      widget = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      if (typeof widget === 'function') {
        widget.apply(this, args);
      }
      return this;
    };

    return Sundae;

  })();

  sundae = new Sundae;

  sundae.Sundae = Sundae;

  sundae.router = require('./widgets/router')(sundae);

  sundae.config = require('./widgets/config')(sundae);

  sundae.event = require('./widgets/event')(sundae);

  sundae.error = require('./widgets/error');

  module.exports = sundae;

}).call(this);
