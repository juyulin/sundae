// Generated by CoffeeScript 1.7.1
(function() {
  var async, cli, commander, fs, path, sh;

  commander = require('commander');

  sh = require('shelljs');

  fs = require('fs');

  async = require('async');

  path = require('path');

  cli = {
    init: function(mainPath) {
      var e, files, msg;
      try {
        files = fs.readdirSync(mainPath);
      } catch (_error) {
        e = _error;
      }
      if (files != null ? files.length : void 0) {
        return cli.fail("Path [" + mainPath + "] is exist and not empty!");
      }
      msg = "copy files to " + mainPath + " ...";
      cli.exec(msg);
      sh.cp('-rf', path.join(__dirname, '../app/'), mainPath);
      cli.pass(msg);
      msg = "install dependencies";
      cli.exec(msg);
      sh.cd(mainPath);
      if (sh.exec('npm install').code !== 0) {
        return cli.fail(msg);
      }
      return cli.pass(msg);
    },
    exec: function(msg) {
      return console.log("  \u001b[36mEXEC:\u001b[39m " + msg);
    },
    pass: function(msg) {
      return console.log("  \u001b[32mPASS:\u001b[39m " + msg);
    },
    fail: function(msg) {
      console.error("  \u001b[31mFAIL:\u001b[39m " + msg);
      return process.exit(0);
    },
    succ: function(msg) {
      console.log("  \u001b[32mSUCC:\u001b[39m " + msg);
      return process.exit(1);
    }
  };

  commander.command('init').description('prepare for the application folder').usage('[app]').action(function(app) {
    if (toString.call(app) !== '[object String]') {
      app = '';
    }
    return _init(path.resolve(app));
  });

  commander.parse(process.argv);

  if (process.argv.length < 3) {
    commander.help();
  }

  module.exports = cli;

}).call(this);
